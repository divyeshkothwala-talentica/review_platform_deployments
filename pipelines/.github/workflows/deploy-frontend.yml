name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'fe_review_platform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: fe_review_platform/package-lock.json
      
      - name: Install dependencies
        working-directory: ./fe_review_platform
        run: npm ci
      
      - name: Create environment file
        working-directory: ./fe_review_platform
        run: |
          echo "REACT_APP_API_URL=${{ secrets.BACKEND_API_URL }}" > .env.production
          echo "REACT_APP_ENVIRONMENT=${{ secrets.ENVIRONMENT || 'dev' }}" >> .env.production
          echo "GENERATE_SOURCEMAP=false" >> .env.production
      
      - name: Run tests
        working-directory: ./fe_review_platform
        run: npm test -- --coverage --watchAll=false
      
      - name: Build application
        working-directory: ./fe_review_platform
        run: npm run build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Deploy to S3
        working-directory: ./fe_review_platform
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --cache-control "public,max-age=31536000,immutable" \
            --exclude "*.html" \
            --exclude "service-worker.js" \
            --exclude "manifest.json"
          
          # Upload HTML files with no-cache
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --cache-control "public,max-age=0,must-revalidate" \
            --include "*.html" \
            --include "service-worker.js" \
            --include "manifest.json"
      
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
      
      - name: Get deployment URL
        run: |
          echo "ðŸš€ Frontend deployed successfully!"
          echo "ðŸ“± Application URL: https://${{ secrets.CLOUDFRONT_DOMAIN_NAME }}"
          echo "ðŸ”— Backend API: ${{ secrets.BACKEND_API_URL }}"

  lighthouse-audit:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Wait for deployment
        run: sleep 60
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ secrets.CLOUDFRONT_DOMAIN_NAME }}
          configPath: './fe_review_platform/.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
